"""
Django settings for API project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-777@o9r5g4rf6fjd_heu%3j3cq641%55)2#9&%lao4wi1o$iqz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '0.0.0.0', '127.0.0.1', '159.65.95.248', 'host.docker.internal']

# 'localhost', '0.0.0.0', '127.0.0.1', 

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'oauth2_provider',
    "corsheaders",
    'scrafi_api'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    # 'corsheaders.middleware.CorsPostCsrfMiddleware',
    # 'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


CORS_ALLOW_ALL_ORIGINS = True

# CORS_ALLOWED_ORIGINS = ["http://no.ma"]

# CORS_ALLOWED_ORIGIN_REGEXES = [r"^https://\w+\.ineo\.app$"]
#
#
# CSRF_TRUSTED_ORIGINS = ["scrafi.inbiz.io"],r"^http://\w+\.ineo\.app$"
#

# CORS_ALLOW_METHODS = ["GET","POST"]
#
#

# CORS_ALLOW_CREDENTIALS = True
#
#

CORS_ALLOW_HEADERS = ['*']


CORS_ORIGIN_WHITELIST = ('http://localhost:8000',)


# ADMINS = [('Zhor', 'zhor.abid@gmail.com'), ('ZhorGen', 'zhor.generafi@gmail.com')]

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = 'smtp.gmail.com'

EMAIL_PORT = 587

EMAIL_USE_TLS = True

EMAIL_HOST_USER = 'scrafiserver@gmail.com'

EMAIL_HOST_PASSWORD = 'generafi@21'

# MANAGERS = ADMINS

SERVER_EMAIL = 'scrafiserver@gmail.com'

# SECURE_SSL_REDIRECT = True

path = os.path.expanduser('~')

if "C:" in path:
    path = path.replace('\\', '/')

djangoza_server_file = f'{path}/scrafi_project/Logs/django/server/server.log'
djangoza_request_file = f'{path}/scrafi_project/Logs/django/request/request.log'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'djangoza': {
            'format': '%(asctime)s GMT | %(levelname)s --- \n   %(message)s \n',
            'datefmt': "%a %d %b %y - %H:%M:%S",
        }
    },
    'handlers': {
        'djangoza_server': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': djangoza_server_file,
            'formatter': 'djangoza',
        },
        'djangoza_request': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': djangoza_request_file,
            'formatter': 'djangoza',
        },
    },
    'loggers': {
        'django.server': {
            'handlers': ['djangoza_server'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['djangoza_request'],
            'level': 'INFO',
            'propagate': True,
        }
    }
}

# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication'
    ],

    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ]
}

ROOT_URLCONF = 'API.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI_APPLICATION = 'API.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

LOGIN_URL = '/admin/login/'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
